// <auto-generated />
using LarryDavid.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LarryDavid.Migrations
{
    [DbContext(typeof(LarryDavidContext))]
    partial class LarryDavidContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LarryDavid.Models.Episode", b =>
                {
                    b.Property<int>("EpisodeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SeasonEpisode");

                    b.Property<string>("Show");

                    b.HasKey("EpisodeId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("LarryDavid.Models.EpisodeTheme", b =>
                {
                    b.Property<int>("EpisodeThemeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EpisodeId");

                    b.Property<int>("ThemeId");

                    b.HasKey("EpisodeThemeId");

                    b.HasIndex("EpisodeId");

                    b.HasIndex("ThemeId");

                    b.ToTable("EpisodeTheme");
                });

            modelBuilder.Entity("LarryDavid.Models.Theme", b =>
                {
                    b.Property<int>("ThemeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Joke");

                    b.HasKey("ThemeId");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("LarryDavid.Models.EpisodeTheme", b =>
                {
                    b.HasOne("LarryDavid.Models.Episode", "Episode")
                        .WithMany("Themes")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LarryDavid.Models.Theme", "Theme")
                        .WithMany("Episodes")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
